name: Release Process

permissions:
  contents: write
  packages: write

on:
#  push:
#    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.extract-version.outputs.release-version }}
      should-release: ${{ steps.check-version.outputs.should-release }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Check if should create release
      id: check-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        if [[ $VERSION != *"-SNAPSHOT"* ]]; then
          echo "should-release=true" >> $GITHUB_OUTPUT
          echo "Release version detected: $VERSION"
        else
          echo "should-release=false" >> $GITHUB_OUTPUT
          echo "Snapshot version detected: $VERSION"
        fi
        
    - name: Extract version
      id: extract-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "release-version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create GitHub release
      if: steps.check-version.outputs.should-release == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.extract-version.outputs.release-version }}
        release_name: Release ${{ steps.extract-version.outputs.release-version }}
        draft: false
        prerelease: false

  build-release-image:
    needs: create-release
    if: needs.create-release.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push release image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.create-release.outputs.release-version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        platforms: linux/amd64,linux/arm64
        
  prepare-next-snapshot:
    needs: [create-release, build-release-image]
    if: needs.create-release.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Set next snapshot version
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        node scripts/set-snapshot-version.js
        git add package.json
        git commit -m "chore: prepare for next development iteration"
        git push