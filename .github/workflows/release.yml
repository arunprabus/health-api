name: Release Process

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Type of release'
        required: true
        default: 'patch'
        type: 'choice'
        options:
          - patch
          - minor
          - major

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.extract-version.outputs.release-version }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create release branch
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git checkout -b release/$(date +'%Y%m%d')
        
    - name: Set release version
      run: |
        node scripts/set-release-version.js
        git add package.json
        git commit -m "chore: prepare release version"
        git push origin release/$(date +'%Y%m%d')
        
    - name: Extract version
      id: extract-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "release-version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.extract-version.outputs.release-version }}
        release_name: Release ${{ steps.extract-version.outputs.release-version }}
        draft: false
        prerelease: false

  build-and-push:
    needs: prepare-release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout release branch
      uses: actions/checkout@v4
      with:
        ref: release/$(date +'%Y%m%d')
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/health-api:${{ needs.prepare-release.outputs.release-version }}
          ${{ secrets.DOCKER_USERNAME }}/health-api:latest
        platforms: linux/amd64,linux/arm64
        
  update-main:
    needs: [prepare-release, build-and-push]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main
      uses: actions/checkout@v4
      with:
        ref: main
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Merge release to main
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git fetch origin release/$(date +'%Y%m%d')
        git merge origin/release/$(date +'%Y%m%d')
        
    - name: Set next snapshot version
      run: |
        node scripts/set-snapshot-version.js
        git add package.json
        git commit -m "chore: prepare for next development iteration"
        git push origin main